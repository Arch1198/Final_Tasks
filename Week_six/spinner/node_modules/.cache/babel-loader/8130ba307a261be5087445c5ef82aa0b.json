{"ast":null,"code":"var _jsxFileName = \"/home/yadhnesh/Task/Final_Tasks/Week_five/nested_routing/src/component/context/ProductListContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProdContext = /*#__PURE__*/createContext();\n\nconst ProdContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // the value that will be given to the context\n  const [prodList, setProdList] = useState([]);\n\n  async function GetProd() {\n    await fetch('https://fakestoreapi.com/products').then(res => res.json()).then(data => {\n      setProdList();\n    });\n  }\n\n  var val = {\n    prodList\n  };\n  return (\n    /*#__PURE__*/\n    // the Provider gives access to the context to its children\n    _jsxDEV(ProdContext.Provider, {\n      value: val,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(ProdContextProvider, \"8mcZMcuW7iUKNxUX8NxEOaTaiIc=\");\n\n_c = ProdContextProvider;\nexport { ProdContext, ProdContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProdContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","ProdContext","ProdContextProvider","children","prodList","setProdList","GetProd","fetch","then","res","json","data","val"],"sources":["/home/yadhnesh/Task/Final_Tasks/Week_five/nested_routing/src/component/context/ProductListContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect,useContext } from \"react\";\n\n\nconst ProdContext = createContext();\n\nconst ProdContextProvider = ({ children }) => {\n  // the value that will be given to the context\n  const [prodList, setProdList] = useState([]);\n  async function GetProd(){\n    await fetch('https://fakestoreapi.com/products')\n    .then(res=>res.json())\n    .then(data=>{setProdList()})\n    }\n  var val={prodList}\n  return (\n    // the Provider gives access to the context to its children\n    <ProdContext.Provider value={val}>\n      {children}\n    </ProdContext.Provider>\n  );\n};\n\nexport { ProdContext, ProdContextProvider };"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,EAAmDC,UAAnD,QAAqE,OAArE;;AAGA,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;;AAEA,MAAMK,mBAAmB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;EACA,eAAeQ,OAAf,GAAwB;IACtB,MAAMC,KAAK,CAAC,mCAAD,CAAL,CACLC,IADK,CACAC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADL,EAELF,IAFK,CAEAG,IAAI,IAAE;MAACN,WAAW;IAAG,CAFrB,CAAN;EAGC;;EACH,IAAIO,GAAG,GAAC;IAACR;EAAD,CAAR;EACA;IAAA;IACE;IACA,QAAC,WAAD,CAAa,QAAb;MAAsB,KAAK,EAAEQ,GAA7B;MAAA,UACGT;IADH;MAAA;MAAA;MAAA;IAAA;EAFF;AAMD,CAfD;;GAAMD,mB;;KAAAA,mB;AAiBN,SAASD,WAAT,EAAsBC,mBAAtB"},"metadata":{},"sourceType":"module"}